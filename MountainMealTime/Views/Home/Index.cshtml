  @{Dictionary<string, string> meals = new Dictionary<string, string>()
{
    {"6:50:00 AM", "Bcca, Glutamine, and a handful of Almonds." },
    {"7:30:00 AM", "8 Eggs, 200 grams of Oats, Blueberries, Strawberries, and an Avocado." },
    {"9:30:00 AM", "400 grams of Beef, 400 grams of Sweet Potatoes, and a handful of Spinach and Greens." },
    {"11:50:00 AM", "Bcca and Glutamine." },
    {"12:00:00 PM", "400 grams of Chicken, 400 grams of Potatoes, some Greens, and some Fruit." },
    {"2:00:00 PM", "BLEND: 150 grams of Oats or Sweet Potatoes, 2 Bananas, 150 grams of Rice Krispies, Frozen Berries, a handful of Almonds, Peanut Butter, and Glutamine." },
    {"2:30:00 PM", "Bcca, Glutamine, Vitargo." },
    {"5:30:00 PM", "60 grams of Protein and 2 Bananas." },
    {"6:00:00 PM", "500 grams of Beef, Potatoes, and Greens." },
    {"8:30:00 PM", "500 grams of Salmon and 500 grams of Sweet Potatoes." },
    {"10:30:00 PM", "50 grams of Casein Protein." }
}; }

@{ViewBag.Title = "Mountain Meal Time";}

<div class="jumbotron">
    <h1>MOUNTAIN MEAL TIME</h1>
    <div class="row">
        @*<img class="col-md-4" src="~/Content/Images/MountainAngry.jpg" />*@
        <p class="lead col-md-12">Do you want to become as big as Icelandic strongman Hafþór Júlíus Björnsson?  You can train all you want, but you will never become a 441 pound 'Mountain' of pure muscle unless you <p class="sub-head">EAT LIKE THE MOUNTAIN. </p></p>
        <hr />
        <img class="col-md-5" src="~/Content/Images/MountainAngry.jpg" />

        <div class="clocks col-md-7">
            <div class="currentTime">CURRENT TIME</div>
            <div class="clock">
                <div class="clock-face">
                    <div class="hand hour-hand"></div>
                    <div class="hand min-hand"></div>
                    <div class="hand sec-hand"></div>
                </div>
            </div>
            <div class="currentTime">@DateTime.Now.ToString("t")</div>
        </div>
    </div>
    <hr />
</div>

<div class="row">
    @{
        bool isMealTime = false;
        string currentMeal = "";
        DateTime? countdownTime = null;
    }

    @foreach (KeyValuePair<string, string> food in meals)
    {
        if (DateTime.Now >= Convert.ToDateTime(food.Key) && DateTime.Now <= Convert.ToDateTime(food.Key).AddMinutes(5))
        {
            isMealTime = true;
            currentMeal = food.Value;
        }
    }

    @if (isMealTime == true)
    {
        <div class="col-md-12"><p class="timeMessage">TIME TO EAT!</p></div>
        <div class="col-md-12"><p class="mealInfo">@currentMeal</p></div>
        <div class="col-md-12 imageRow"><img id="eatingImage" src="~/Content/Images/MountainEating.gif" /></div>

    }
    else if (DateTime.Now <= Convert.ToDateTime("6:30:00 AM"))
    {
        <div class="col-md-12"><p class="timeMessage">TIME TO SLEEP!</p></div>
        <div class="col-md-12 imageRow"><img class="timeImage sleepImage" src="~/Content/Images/MountainSleep.jpg" /></div>
    }
    else
    {
        <div class="col-md-12"><p class="timeMessage">TIME TO LIFT!</p></div>
        <div class="col-md-12 imageRow"><img class="timeImage" src="~/Content/Images/MountainLift.gif" /></div>
    }

    @if (DateTime.Now >= Convert.ToDateTime("6:50:00 AM") && DateTime.Now < Convert.ToDateTime("7:30:00 AM")) { countdownTime = Convert.ToDateTime("7:30:00 AM"); }
    else if (DateTime.Now >= Convert.ToDateTime("7:30:00 AM") && DateTime.Now < Convert.ToDateTime("9:30:00 AM")) { countdownTime = Convert.ToDateTime("9:30:00 AM"); }
    else if (DateTime.Now >= Convert.ToDateTime("9:30:00 AM") && DateTime.Now < Convert.ToDateTime("11:50:00 AM")) { countdownTime = Convert.ToDateTime("11:50:00 AM"); }
    else if (DateTime.Now >= Convert.ToDateTime("11:50:00 AM") && DateTime.Now < Convert.ToDateTime("12:00:00 PM")) { countdownTime = Convert.ToDateTime("12:00:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("12:00:00 PM") && DateTime.Now < Convert.ToDateTime("2:00:00 PM")) { countdownTime = Convert.ToDateTime("2:00:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("2:00:00 PM") && DateTime.Now < Convert.ToDateTime("2:30:00 PM")) { countdownTime = Convert.ToDateTime("2:30:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("2:30:00 PM") && DateTime.Now < Convert.ToDateTime("5:30:00 PM")) { countdownTime = Convert.ToDateTime("5:30:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("5:30:00 PM") && DateTime.Now < Convert.ToDateTime("6:00:00 PM")) { countdownTime = Convert.ToDateTime("6:00:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("6:00:00 PM") && DateTime.Now < Convert.ToDateTime("8:30:00 PM")) { countdownTime = Convert.ToDateTime("8:30:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("8:30:00 PM") && DateTime.Now < Convert.ToDateTime("10:30:00 PM")) { countdownTime = Convert.ToDateTime("10:30:00 PM"); }
    else if (DateTime.Now >= Convert.ToDateTime("10:30:00 PM") && DateTime.Now < Convert.ToDateTime("11:59:99 PM")) { countdownTime = Convert.ToDateTime("6:50:00 AM").AddDays(1); }
    else { countdownTime = Convert.ToDateTime("6:50:00 AM"); }

    <p id="nextMeal" style="display: none;">@countdownTime</p>
    <div class="countDownMeal">TIME UNTIL NEXT MEAL: <p id="demo"></p></div>

<script async defer src="~/Scripts/Clock.js"></script>
<script async defer src="~/Scripts/Countdown.js"></script>

</div>
